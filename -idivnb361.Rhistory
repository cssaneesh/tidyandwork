library(ggplot2)
ggplot(income.data) +
geom_vline(aes(xintercept = mean(Income)), linetype = 'dashed')+
geom_density(aes(x = Income, color = Village)) +
geom_vline(xintercept = 959, linetype= 'dotted', col= '#f39c96')+
geom_vline(xintercept = 1051, linetype= 'dotted', col= '#00bfc4')
df <- data.frame(sp.name= c('a','a', 'b', 'b' ,'c', 'd' ),
number=c(2,2,3, 3,4,4),
stage= c('adult', 'young', 'young','adult', 'adult', 'young'))
df <- data.frame(name= c('a','a', 'b', 'b' ,'c', 'd' ),
number=c(2,2,3, 3,4,4),
stage= c('adult', 'young', 'young','adult', 'adult', 'young'))
library(dplyr)
df %>%
group_by(name) %>%
mutate(new_column= if_else(any_of(stage=='young') & any_of(stage== 'adult')& stage== 'adult')* number)
df %>%
group_by(name) %>%
mutate(new_column= if_else(any(stage=='young') & any(stage== 'adult')& stage== 'adult')* number)
df %>%
group_by(name) %>%
mutate(new_column= (any(stage=='young') & any(stage== 'adult')& stage== 'adult')* number)
df <- data.frame(name=c('a','a'),
seedling= c(1, 0),
adult=c(0,5))
df_new <- df %>%
group_by(name) %>%
summarise(seedling = max(seedling, 0),
adult = max(adult, 0)) %>%
ungroup()
View(df_new)
df <- data.frame(name=c('a','a', 'b'),
seedling= c(1, 0, 1),
adult=c(0,5, 0))
df_new <- df %>%
group_by(name) %>%
summarise(seedling = max(seedling, 0),
adult = max(adult, 0)) %>%
ungroup()
View(df_new)
df <- data.frame(name=c('a','a', 'b', 'c'),
seedling= c(1, 0, 1, 0),
adult=c(0,5, 0, 1))
df_new <- df %>%
group_by(name) %>%
summarise(seedling = max(seedling, 0),
adult = max(adult, 0)) %>%
ungroup()
View(df_new)
library(dplyr)
df <- data.frame(
name= c('saneesh', 'sanusha', 'appu', 'jaru'),
fav.no=c(11, 7, 20, 21),
animal= c('human', 'human', 'human', 'dog')
)
df
library(tidyverse)
df %>% pivot_wider(names_from = 'animal', values_from = 'fav.no')
df <- data.frame(
name= c('saneesh', 'sanusha', 'appu', 'jaru', 'saneesh'),
fav.no=c(11, 7, 20, 21, 11),
animal= c('human', 'human', 'human', 'dog', 'human')
)
df %>% pivot_wider(names_from = 'animal', values_from = 'fav.no')
df <- data.frame(
name= c('saneesh', 'sanusha', 'appu', 'jaru', 'saneesh'),
fav.no=c(11, 7, 20, 21, 12),
animal= c('human', 'human', 'human', 'dog', 'human')
)
df %>% pivot_wider(names_from = 'animal', values_from = 'fav.no')
# because saneesh is repeated twice but with two fav.nos
# the soulution is to add a row id, make pivot wide and get rid of the row id
df %>% mutate(id= row_number()) %>%
group_by(name) %>%
pivot_wider(names_from = 'animal', values_from = 'fav.no') %>%
select(-id)
df <- data.frame(
name= c('saneesh', 'sanusha', 'appu', 'jaru'),
fav.no=c(11, 7, 20, 21),
animal= c('human', 'human', 'human', 'dog')
)
df %>% pivot_wider(names_from = 'animal', values_from = 'fav.no')
df1 %>% pivot_wider(names_from = 'animal', values_from = 'fav.no')
# but when we have similar names in the grouping column
df1 <- data.frame(
name= c('saneesh', 'sanusha', 'appu', 'jaru', 'saneesh'),
fav.no=c(11, 7, 20, 21, 12),
animal= c('human', 'human', 'human', 'dog', 'human')
)
df1 %>% pivot_wider(names_from = 'animal', values_from = 'fav.no')
# because saneesh is repeated twice but with two fav.nos
# the soulution is to add a row id, make pivot wide and get rid of the row id
df1 %>% mutate(id= row_number()) %>%
group_by(name) %>%
pivot_wider(names_from = 'animal', values_from = 'fav.no') %>%
select(-id)
# because saneesh is repeated twice but with two fav.nos
# the soulution is to add a row id, make pivot wide and get rid of the row id
df1 %>% mutate(id= row_number()) %>%
group_by(name) %>%
pivot_wider(names_from = 'animal', values_from = 'fav.no', values_fill = 0) %>%
select(-id)
# because saneesh is repeated twice but with two fav.nos
# the soulution is to add a row id, make pivot wide and get rid of the row id
df1 %>% mutate(id = row_number()) %>%
group_by(name) %>%
pivot_wider(names_from = 'animal',
values_from = 'fav.no',
values_fill = 0) %>% select(-id)
library(tinytex)
update.packages('tinytex')
remotes::install_github('rstudio/tinytex')
detach("package:tinytex", unload = TRUE)
remotes::install_github('rstudio/tinytex')
install.packages("~/R/library/xfun/libs/x64/xfun.dll", repos = NULL)
tinytex::reinstall_tinytex()
options(tinytex.verbose = TRUE)
library(tidyverse)
df <- data.frame(name= c('a','a', 'b', 'b' ,'c', 'd' ),
number=c(2,2,3, 3,4,4),
stage= c('adult', 'young', 'young','adult', 'adult', 'young'))
df %>%
group_by(name) %>%
mutate(new_column = ifelse(any(stage == "young") & any(stage == "adult") & stage == "adult",
number[stage == 'adult'], 0))
df %>%
group_by(name) %>%
mutate(new_column= (any(stage=='young') & any(stage== 'adult')& stage== 'adult')* number)
df_cleaned <- df %>%
group_by(name) %>%
filter(!duplicated(name)) %>%
mutate(new_column = (any(stage == 'young') & any(stage == 'adult') & stage == 'adult') * number)
df %>%
group_by(name) %>%
filter(!duplicated(name)) %>%
mutate(new_column = (any(stage == 'young') & any(stage == 'adult') & stage == 'adult') * number)
df <- data.frame(name= c('a','a', 'b', 'b' ,'c', 'd' ),
number=c(2,2,3, 3,4,4),
stage= c('adult', 'young', 'young','adult', 'adult', 'young'))
df
df <- data.frame(
site=c('a1', 'a1', 'b1', 'b1', 'c1','c1'),
name=c('a', 'b', 'c', 'a', 'd', 'd'),
number=c(2,3,4,5,6,7),
stage=c('y', 'y', 'y', 'a', 'a', 'a'),
age=(3,4,5,1,6,4)
df <- data.frame(
site=c('a1', 'a1', 'b1', 'b1', 'c1','c1'),
name=c('a', 'b', 'c', 'a', 'd', 'd'),
number=c(2,3,4,5,6,7),
stage=c('y', 'y', 'y', 'a', 'a', 'a'),
age=c(3,4,5,1,6,4)
)
df
df$stage_y <- ifelse(df$stage == "y", df$number, NA)
df$stage_a <- ifelse(df$stage == "a", df$number, NA)
df
df %>% pivot_wider(names_from = 'stage', values_from = 'number')
df %>% pivot_wider(names_from = 'stage', values_from = 'number', values_fill = 0)
df %>%
group_by(site) %>%
pivot_wider(names_from = 'stage', values_from = 'number', values_fill = 0)
df %>%
group_by(name) %>%
pivot_wider(names_from = 'stage', values_from = 'number', values_fill = 0)
df <- data.frame(
site=c('a1', 'a1', 'b1', 'b1', 'c1','c1'),
name=c('a', 'b', 'c', 'a', 'b', 'd'),
number=c(2,3,4,5,6,7),
stage=c('y', 'y', 'y', 'a', 'a', 'a'),
age=c(3,4,5,1,6,4)
)
df
df <- data.frame(
site=c('a1', 'a1', 'b1', 'b1', 'c1','c1'),
name=c('a', 'b', 'c', 'a', 'b', 'd'),
number=c(2,3,4,5,6,7),
stage=c('y', 'y', 'y', 'a', 'a', 'a'),
age=c(3,4,5,1,6,4)
) %>% arrange(name)
df
df %>%
group_by(name) %>%
pivot_wider(names_from = 'stage', values_from = 'number', values_fill = 0)
df <- data.frame(
site=c('a1', 'a1', 'b1', 'b1', 'c1','c1'),
name=c('a', 'b', 'c', 'a', 'b', 'd'),
number=c(2,3,4,5,6,7),
stage=c('y', 'y', 'y', 'a', 'a', 'a'),
age=c(3,4,5,1,6,4)
) %>% arrange(name) %>% group_by(name) %>%
pivot_wider(names_from = 'stage', values_from = 'number', values_fill = 0)
data.frame(
site=c('a1', 'a1', 'b1', 'b1', 'c1','c1'),
name=c('a', 'b', 'c', 'a', 'b', 'd'),
number=c(2,3,4,5,6,7),
stage=c('y', 'y', 'y', 'a', 'a', 'a'),
age=c(3,4,5,1,6,4)
) %>% arrange(name) %>% group_by(name) %>%
pivot_wider(names_from = 'stage', values_from = 'number', values_fill = 0)
df <- data.frame(
site=c('a1', 'a1', 'b1', 'b1', 'c1','c1'),
name=c('a', 'b', 'c', 'a', 'b', 'd'),
number=c(2,3,4,5,6,7),
stage=c('tree', 'tree', 'tree', 'seedling', 'seedling', 'seedling'),
age=c(3,4,5,1,6,4)
) %>% arrange(name) %>% group_by(name) %>%
pivot_wider(names_from = 'stage', values_from = 'number', values_fill = 0)
df
df <- data.frame(
site=c('a1', 'a1', 'b1', 'b1', 'c1','c1'),
name=c('a', 'b', 'c', 'a', 'b', 'd'),
number=c(2,3,4,5,6,7),
stage=c('tree', 'tree', 'tree', 'seedling', 'seedling', 'seedling'))
) %>% arrange(name) %>% group_by(name) %>%
df <- data.frame(
site=c('a1', 'a1', 'b1', 'b1', 'c1','c1'),
name=c('a', 'b', 'c', 'a', 'b', 'd'),
number=c(2,3,4,5,6,7),
stage=c('tree', 'tree', 'tree', 'seedling', 'seedling', 'seedling')) %>%
arrange(name) %>% group_by(name) %>%
pivot_wider(names_from = 'stage', values_from = 'number', values_fill = 0)
df
df %>%
group_by(name) %>%
pivot_wider(names_from = 'stage', values_from = 'number', values_fill = 0)
df <- data.frame(
site=c('a1', 'a1', 'b1', 'b1', 'c1','c1'),
name=c('a', 'b', 'c', 'a', 'b', 'd'),
number=c(2,3,4,5,6,7),
stage=c('tree', 'tree', 'tree', 'seedling', 'seedling', 'seedling')) %>%
arrange(name) %>% group_by(name) %>%
pivot_wider(names_from = 'stage', values_from = 'number', values_fill = 0)
df
df <- data.frame(
name=c('a', 'b', 'c', 'a', 'b', 'd'),
number=c(2,3,4,5,6,7),
stage=c('tree', 'tree', 'tree', 'seedling', 'seedling', 'seedling')) %>%
arrange(name) %>% group_by(name) %>%
pivot_wider(names_from = 'stage', values_from = 'number', values_fill = 0)
df
data.frame(
name=c('a', 'b', 'c', 'a', 'b', 'd'),
number=c(2,3,4,5,6,7),
stage=c('tree', 'tree', 'tree', 'seedling', 'seedling', 'seedling')) %>%
arrange(name)
df <- data.frame(
name=c('saneesh', 'kishan', 'anil', 'mahi', 'sanusha'),
sex= c('male', 'female', 'male', 'male', 'female'),
weight=c(60, 58, 65, 70, 48)
)
library(tidyverse)
df <- data.frame(
name=c('saneesh', 'kishan', 'anil', 'mahi', 'sanusha'),
sex= c('male', 'female', 'male', 'male', 'female'),
weight=c(60, 58, 65, 70, 48),
favno=c(2,6,10,1,15)
)
ggplot(df, aes(x= sex, y= weight))+
geom_point()
ggplot(df, aes(x= sex, y= weight, col= name))+
geom_point()
ggplot(df, aes(x= sex, y= weight, col= name, size= favno))+
geom_point()
# remove all legends
ggplot(df, aes(x= sex, y= weight, col= name, size= favno))+
geom_point()+
theeme(legend.position= 'none')
# remove all legends
ggplot(df, aes(x= sex, y= weight, col= name, size= favno))+
geom_point()+
theme(legend.position= 'none')
# remove legend created by color
ggplot(df, aes(x= sex, y= weight, col= name, size= favno))+
geom_point()+
guides(color="none")
df <- data.frame(
name=c('saneesh', 'kishan', 'anil', 'mahi', 'sanusha'),
sex= c('male', 'female', 'male', 'male', 'female'),
weight=c(60, 58, 65, 70, 48),
favno=c(2,6,10,1,15),
toys=c(1,3,4,2,4)
)
ggplot(df, aes(x= sex, y= weight,
col= name,
size= favno,
shape= toys))+
geom_point()
ggplot(df, aes(x= sex, y= weight,
col= name,
size= favno,
shape= sex))+
geom_point()
df <- data.frame(
name=c('saneesh', 'kishan', 'anil', 'mahi', 'sanusha'),
sex= c('male', 'female', 'male', 'male', 'female'),
weight=c(60, 58, 65, 70, 48),
favno=c(2,6,10,1,15)
)
ggplot(df, aes(x= sex, y= weight,
col= name,
size= favno,
shape= sex))+
geom_point()
# remove all legends
ggplot(df, aes(x= sex, y= weight, col= name, size= favno))+
geom_point()+
theme(legend.position= 'none')
# remove legend created by color
ggplot(df, aes(x= sex, y= weight, col= name, size= favno))+
geom_point()+
guides(color="shape")
# remove legend created by color
ggplot(df, aes(x= sex, y= weight, col= name, size= favno))+
geom_point()+
guides(shape="shape")
# remove legend created by size
ggplot(df, aes(x= sex, y= weight, col= name, size= favno))+
geom_point()+
guides(size="shape")
# remove legend created by shape
ggplot(df, aes(x= sex, y= weight, col= name, size= favno))+
geom_point()+
guides(shape="none")
# remove legend created by size
ggplot(df, aes(x= sex, y= weight, col= name, size= favno))+
geom_point()+
guides(size="none")
library(brms)
library(tidyverse)
library(report)
library(tidybayes)
library(lme4)
rm(list=ls())
data <- iris
names(data)
m0 <- brm(Sepal.Length ~ 1,
data = iris)
summary(m0)
iris <- iris
rm(list=ls())
iris <- iris
names(iris)
summary(m0)
m0 <- brm(Sepal.Length ~ 1, # intercept only model
data = iris)
summary(m0)
names(iris)
m0 <- brm(Sepal.Length ~ 1, # intercept only model
data = iris)
summary(m0)
m1 <- brm(Sepal.Length ~ Petal.Length,
data = iris)
summary(m1)
conditional_effects(
m1,
effects = 'Petal.Length', # conditional effects of treatment
re_formula = NA,
method = 'fitted'
)
plot(m1)
m2 <- brm(Sepal.Length ~ Species,
data = iris)
summary(m2)
conditional_effects(
m2,
effects = 'Species',
re_formula = NA,
method = 'fitted' )
m3 <- brm(Sepal.Length ~ Species + Petal.Length,
data = iris)
m4 <- brm(Sepal.Length ~ Species * Petal.Length,
data = iris)
summary(m4)
conditional_effects(m4,
effects = 'Species:Petal.Length',
re_formula = NA,
method = 'fitted'
)
conditional_effects(m4,
effects = 'Species:Petal.Length',
re_formula = NA,
method = 'fitted'
)
m3 <- brm(Sepal.Length ~ Species + Petal.Length,
data = iris)
summary(m3)
conditional_effects(m3, conditions = 'Species', re_formula = NA, method = 'fitted')
conditional_effects(m3, conditions = 'Petal.Length', re_formula = NA, method = 'fitted')
conditional_effects(m3, effects =  'Species', re_formula = NA, method = 'fitted')
conditional_effects(m3, effects = 'Petal.Length', re_formula = NA, method = 'fitted')
ggplot(iris, Petal.Length,Petal.Width, col=Species )+
geom_point()
library(tidyverse)
ggplot(iris, Petal.Length, Petal.Width, col=Species )+
geom_point()
ggplot(iris, aes(Petal.Length, Petal.Width, col=Species ))+
geom_point()
ggplot(iris, aes(Petal.Length, Petal.Width, col=Species ))+
geom_point()+
facet_wrap(~Species)
ggplot(iris, aes(Petal.Length, Petal.Width, col=Species ))+
geom_point()+
geom_smooth(method = 'lm')+
facet_wrap(~Species)
iris.model <- brm( Petal.Length ~ Petal.Width + (1 | Species),
data = iris)
iris.model <- brm( Petal.Length ~ Petal.Width + (1 | Species),
data = iris, chains = 4, iter = 5000, warmup = 1000)
summary(iris.model)
pp_check(iris.model)
plot(iris.model)
conditional_effects(x = iris.model,
effects ='Petal.Width',
re_formula = NA,
method = 'fitted' )
library(tidyverse)
name <- c('saneesh', 'sanusha', 'appu', 'kishan')
weight <- c(63,48, 20, NA)
height <- c(164, 150, NA, 75)
family <- data.frame(name, weight, height)
family %>% as_tibble()
library(tidyverse)
name <- c('saneesh', 'sanusha', 'appu', 'kishan')
weight <- c(63,48, 20, NA)
height <- c(164, 150, NA, 75)
family <- data.frame(name, weight, height)
family %>% as_tibble()
library(tibble)
iris %>% add_column(ob_no=1:150) %>% head(5)
id <- (c(1,1,2,2,3,3))
Country <- c('Angola', 'Angola','Botswana', 'Botswana','Zimbabwe','Zimbabwe')
year <- c('2006', '2007', '2008', '2009', '2010', '2006')
bank.ratio <- c(24,25,38,34,42,49)
Reserve.ratio <- c(77,59,64,65,57,86)
broad.money <- c(163,188,317,361,150,288)
bank <- data.frame(id, Country, year, bank.ratio, Reserve.ratio,broad.money)
bank %>% view()
bank %>%
filter(id %in% c(1,2)) %>%
as_tibble()
iris %>% filter(Species %in% c('setosa', 'versicolor')) %>% glimpse()
iris %>% select(Species) %>%
filter(Species %in% c('setosa', 'versicolor')) %>% glimpse()
iris %>% select(Species) %>%
filter(Species %in% c('setosa', 'versicolor')) %>% head(3)
iris %>% select(Species) %>%
distinct_(Species) %>%
filter(Species %in% c('setosa', 'versicolor')) %>% head(3)
iris %>% select(Species) %>%
distinct(Species) %>%
filter(Species %in% c('setosa', 'versicolor')) %>% head(3)
iris %>% pull(Species) %>% head(3) # returns vector values
iris %>% select(Species) %>% head (3) # returns a table with one column
iris %>% select(everything()) %>% head(3)
target <- gapminder %>% filter(country %in% c('Hungary','Iceland', 'Mongolia')) %>% head(3)
library(gapminder)
target <- gapminder %>% filter(country %in% c('Hungary','Iceland', 'Mongolia')) %>% head(3)
gapminder %>% filter(country %in% target) %>% head (3)
target <- gapminder %>% filter(country %in% c('Hungary','Iceland', 'Mongolia'))
target <- c('Hungary','Iceland', 'Mongolia')
gapminder %>% filter(country %in% target) %>% head (3)
library(dplyr)
library(stringr)
feedback <- c('good_book', 'good_read', 'good_story', 'good for knowledge')
book <- c('ramayana', 'bible', 'encyclopedia', 'Mbharatha')
feedback <- c('good_book', 'good_read', 'good_story', 'good for knowledge')
book <- c('Ramayana', 'Bible', 'Encyclopedia', 'Mbharatha')
df <- data.frame(feedback, book)
feedback <- c('good_book', 'good_read', 'for knowledge', 'adventure')
book <- c('Ramayana', 'Bible', 'Encyclopedia', 'Mbharatha')
df <- data.frame(feedback, book)
df
df <- data.frame(book, feedback)
df
df %>%
mutate(response = case_when(str_starts(feedback, 'good') ~ 'good')) %>%
select(book, response) %>% as_tibble()
data <- data.frame(sex=c(rep('female', 10), rep('male', 8)),
score=c(rnorm(n= 10, mean = 7.56, sd = 1.978), rnorm(n= 8, mean=7.75, sd= 1.631)))
data %>% head(2)
data %>% head(5)
data %>% group_by(sex) %>%
summarise(score= n()) %>%
mutate(freq=score/sum(score)*100)
mtcars %>%
count(am, name = 'number') %>%
as_tibble()
# the following is already in long format
classdata <- data.frame(
studentname = c('captian', 'ant', 'james', 'spider', 'tony', 'bat', 'wonder'),
sibject = c('math', 'his', 'math', 'geo', 'his', 'geo', 'math'),
grade = c('A+', 'B', 'B', 'A+', 'C', 'B+', 'C')
)
classdata %>% head()
library(tidyverse)
numbers <- data.frame(test = seq(1:10))
numbers <-
numbers %>% mutate(test1 = as.numeric(cut_number(test, 3)))
numbers <- numbers %>% mutate(test1 = as.factor(test1)) %>%
mutate(test2 = recode(
test1,
'1' = 'low',
'2' = 'medium',
'3' = 'high'
))
gapminder %>%
filter(gdpPercap< 60000) %>%
ggplot(aes(continent, gdpPercap, color= year, fill= continent))+
geom_boxplot()+
theme_minimal()+ labs( x= 'Continent', y= 'GDP per Capita', fill= 'Continent')
summary(m0)
